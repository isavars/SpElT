channel_groups = {
    # Shank index.
    0:
        {
            # List of channels to keep for spike detection.
            'channels': [18,19,20,21,22,27,28,29],

            # Adjacency graph. Dead channels will be automatically discarded
            # by considering the corresponding subgraph.
            'graph': [
                (18, 22), (18, 19),
                (22, 19), (22, 27),
                (19, 27), (19, 29),
                (27, 29), (27, 21),
                (29, 21), (29, 20),
                (21, 20), (21, 28),
                (20, 28),
            ],

            # 2D positions of the channels, only for visualization purposes
            # in KlustaViewa. The unit doesn't matter.
            'geometry': {

                29: (-10.5, 60),
                28: (0, 0),
                27: (12.5, 80),
                22: (16.5, 120),
                21: (8.5, 40),
                20: (-8.5, 20),
                19: (-14.5, 100),
                18: (-18.5, 140),
            }
    },

    1:
        {
            # List of channels to keep for spike detection.
            'channels': [16,17,23,24,25,26,30,31],

            # Adjacency graph. Dead channels will be automatically discarded
            # by considering the corresponding subgraph.
            'graph': [
 		(26, 16),
                (26, 23), (16, 23),
                (16, 17), (23, 17),
                (23, 25), (17, 25),
                (31, 17), (25, 31),
                (25, 24), (24, 31),
                (31, 30), (24, 30),

            ],

            # 2D positions of the channels, only for visualization purposes
            # in KlustaViewa. The unit doesn't matter.
            'geometry': {

                31: (8.5, 240),
                30: (0, 200),
                26: (-18.5, 340),
                25: (-10.5, 260),
                24: (-8.5, 220),
                23: (-14.5, 300),
                17: (12.5, 280),
                16: (16.5, 320),
            }
    },

    2:
        {
            # List of channels to keep for spike detection.
            'channels': [0,1,5,6,7,8,14,15],

            # Adjacency graph. Dead channels will be automatically discarded
            # by considering the corresponding subgraph.
            'graph': [
                (15, 14), (15, 5),
                (14, 5), (5, 8),
                (0, 14), (8, 14),
                (8, 0), (8, 6),
	        (0, 6),(0, 1),
		(6, 1),(6, 7),
		(1,7),
            ],

            # 2D positions of the channels, only for visualization purposes
            # in KlustaViewa. The unit doesn't matter.
            'geometry': {
                15: (-18.5, 540),
                14: (-14.5, 500),
                8: (12.5, 480),
                7: (0, 400),
                6: (8.5, 440),
                5: (16.5, 520),
                1: (-8.5, 420),
                0: (-10.5, 460),
            }
    },

    3:
        {
            # List of channels to keep for spike detection.
            'channels': [2,3,4,9,10,11,12,13],

            # Adjacency graph. Dead channels will be automatically discarded
            # by considering the corresponding subgraph.
            'graph': [
 		(9, 13),
                (9, 4), (4, 13),
                (12, 13), (4, 12),
                (4, 10), (12, 10),
                (12, 2), (10, 2),
                (10, 3), (2, 3),
                (2, 11), (3, 11),
            ],

            # 2D positions of the channels, only for visualization purposes
            # in KlustaViewa. The unit doesn't matter.
            'geometry': {
                13: (16.5, 720),
                12: (12.5, 680),
                11: (0, 600),
                10: (-10.5, 660),
                9: (-18.5, 740),
                4: (-14.5, 700),
                3: (-8.5, 620),
                2: (8.5, 640),
            }
    }
}
